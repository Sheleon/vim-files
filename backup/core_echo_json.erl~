-module(core_echo_json).
-behaviour(cowboy_http_handler).
-export([tests/0, init/3, handle/2, terminate/2]).

init({_Any, http}, Req, []) ->
    {ok, Req, undefined}.

handle(Req, State) ->
    PostData = case cowboy_http_req:body_qs(Req) of
        {undefined, _} -> <<"no echo json post data sent">>;
        {X, _} -> X
    end,
    RawJson = proplists:get_value(<<"echo_json">>, PostData),
    {ok, Reply} = try jiffy:decode(RawJson) of 
        {ParsedJson} ->
            R = proplists:get_value(<<"testA">>, ParsedJson),
            cowboy_http_req:reply(200, [], [<<"EchoJson: ">>, R], Req)
    catch
        _ ->
            cowboy_http_req:reply(500, [], [<<"Fatal error parsing json: ">>, RawJson], Req)
    end,
    {ok, Reply, State}.

terminate(_Req, _State) ->
    ok.

tests() ->
    {tests, [
        {max_length_test, "not implemented"},
        {empty_test, "not implemented"},
        {unicode_test, "not implemented"}
    ]}.
