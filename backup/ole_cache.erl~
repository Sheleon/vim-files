-module(ole_cache).
-behaviour(application).

-export([
    start/0, start/2, stop/1, get_keystone/0
]).

start() -> 
    application:start(ole_cache).

start(_StartType, _StartArgs) ->
    lager:info("Starting ole_cache application..."),
    ensure_contact(),
    ole_cache_sup:start_link().

stop(_State) ->
    ok.

ensure_contact() ->
    DefaultNodes = [ole_cache:get_keystone()],
    ensure_contact(DefaultNodes).
ensure_contact(ContactNodes) ->
    Answering = [N || N <- ContactNodes, net_adm:ping(N) =:= pong],
    case Answering of
        [] ->
            {error, no_contact_nodes_reachable};
        _ ->
            WaitTime = 6000,
            wait_for_nodes(length(Answering), WaitTime)
    end.

wait_for_nodes(MinNodes, WaitTime) ->
    lager:info("Waiting ~w ms for node connections", [WaitTime]),
    Slices = 10,
    SliceTime = round(WaitTime/Slices),
    wait_for_nodes(MinNodes, SliceTime, Slices).

wait_for_nodes(_MinNodes, _SliceTime, 0) ->
    ok;
wait_for_nodes(MinNodes, SliceTime, Iterations) ->
    case length(nodes()) > MinNodes of
        true ->
            ok;
        false ->
            timer:sleep(SliceTime),
            wait_for_nodes(MinNodes, SliceTime, Iterations - 1)
    end.

get_keystone() ->
    {ok, Keystone} = application:get_env(ole_cache, keystone),
    Keystone.
