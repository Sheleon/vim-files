-module(core).
-behaviour(application).
-export([start/0, start/2, stop/1, test/0, ip/0, port/0, base_url/0, priv/0, 
    tests/0]).
-define(PORT, 8080).

start() ->
    % {{{ disabled apps
    %application:start(crypto),
    %application:start(public_key),
    %application:start(ssl),
    % }}}
    application:start(inets),
    application:start(ibrowse),
    application:start(cowboy),
    application:start(core).

start(_Type, _Args) ->
    Dispatch = [
        {'_', [
                {[<<"push">>, '...'], core_push, []},
                {[<<"pull">>, '...'], core_pull, []},
                {'_', core_four_oh_four, []}
            ]}
    ],
    cowboy:start_listener(core_http_listener, 100,
        cowboy_tcp_transport, [{port, ?PORT}],
        cowboy_http_protocol, [{dispatch, Dispatch}]
    ),
    lager:info("~nCore listening on "++base_url()),
    core_sup:start_link().

ip() ->
    "127.0.0.1".

port() ->
    integer_to_list(?PORT).

base_url() ->
    "http://"++ip()++":"++port().

priv() ->
    code:priv_dir(core).

stop(_State) ->
    ok.

tests() ->
    {tests, [
        {tested_externally, ok}
    ]}.
